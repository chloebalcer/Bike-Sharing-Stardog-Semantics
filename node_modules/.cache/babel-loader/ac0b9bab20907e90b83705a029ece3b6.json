{"ast":null,"code":"var _jsxFileName = \"/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport React, { Component } from 'react';\nimport query from 'stardog';\nimport { TableDataAvailabilityStatus, columnData, columnSelectors, conn, dbName } from \"../../helpers/constants\";\nconst readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\n\nfunction Localisation(lat, lng) {\n  return {\n    latitude: lat,\n    longitude: lng\n  };\n}\n\nfunction SomeFunction(lat, lng) {\n  const result = [];\n  query.execute(conn, 'lyon_bikes', \"select ?lat ?lng where { ?l <http://schema.org/number> ?number . ?l <http://schema.org/lat> ?lat . ?l <http://schema.org/lng> ?lng .}\", 'application/sparql-results+json', {\n    limit: 10,\n    offset: 0\n  }).then(({\n    body\n  }) => {\n    body.results.bindings.map(function (line) {\n      result.push(Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)));\n    });\n  });\n  console.log(result);\n  return;\n}\n\nclass BikeMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 18\n          }\n        });\n      });\n    };\n\n    this.state = {\n      stores: [{\n        lat: 47.49855629475769,\n        lng: -122.14184416996333\n      }, {\n        latitude: 47.359423,\n        longitude: -122.021071\n      }, {\n        latitude: 47.2052192687988,\n        longitude: -121.988426208496\n      }, {\n        latitude: 47.6307081,\n        longitude: -122.1434325\n      }, {\n        latitude: 47.3084488,\n        longitude: -122.2140121\n      }, {\n        latitude: 47.5524695,\n        longitude: -122.0425407\n      }]\n    };\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100%'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 18\n      }\n    }, SomeFunction));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBE0oM95iQmrpxaKt7nREeHZwLqSe85nw0'\n})(BikeMap);","map":{"version":3,"sources":["/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js"],"names":["Map","GoogleApiWrapper","Marker","React","Component","query","TableDataAvailabilityStatus","columnData","columnSelectors","conn","dbName","readQuery","Localisation","lat","lng","latitude","longitude","SomeFunction","result","execute","limit","offset","then","body","results","bindings","map","line","push","parseFloat","value","console","log","BikeMap","constructor","props","displayMarkers","state","stores","store","index","render","mapStyles","width","height","apiKey"],"mappings":"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","sourcesContent":["import { Map, GoogleApiWrapper, Marker} from 'google-maps-react';\nimport React, { Component } from 'react';\nimport query from 'stardog';\nimport {\n    TableDataAvailabilityStatus,\n    columnData,\n    columnSelectors,\n    conn,\n    dbName,\n  } from \"../../helpers/constants\";\n  const readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\n\nfunction Localisation(lat, lng) {\n    return {\n      latitude: lat,\n      longitude: lng\n    };\n  }\n\nfunction SomeFunction(lat, lng) {\n    const result = []\n    query.execute(conn, 'lyon_bikes', \"select ?lat ?lng where { ?l <http://schema.org/number> ?number . ?l <http://schema.org/lat> ?lat . ?l <http://schema.org/lng> ?lng .}\", 'application/sparql-results+json', {\n  limit: 10,\n  offset: 0,\n}).then(({ body }) => {\n  body.results.bindings.map(function(line){result.push(Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)))}); \n});\n   console.log(result);\n   return;\n  }\n\n\nclass BikeMap extends Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n          stores: [{lat: 47.49855629475769, lng: -122.14184416996333},\n            {latitude: 47.359423, longitude: -122.021071},\n            {latitude: 47.2052192687988, longitude: -121.988426208496},\n            {latitude: 47.6307081, longitude: -122.1434325},\n            {latitude: 47.3084488, longitude: -122.2140121},\n            {latitude: 47.5524695, longitude: -122.0425407}]\n        }\n      }\n      \n      displayMarkers = () => {\n        return this.state.stores.map((store, index) => {\n          return <Marker key={index} id={index} position={{\n           lat: store.latitude,\n           lng: store.longitude\n         }}\n         onClick={() => console.log(\"You clicked me!\")} />\n        })\n      }\n    render() {\n        const mapStyles = {\n            width: '100%',\n            height: '100%',\n          };\n        return (\n            <div><div>{SomeFunction}</div>\n                \n           \n            </div>\n        );\n      }\n}\n\n\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyBE0oM95iQmrpxaKt7nREeHZwLqSe85nw0'\n  })(BikeMap);\n\n"]},"metadata":{},"sourceType":"module"}