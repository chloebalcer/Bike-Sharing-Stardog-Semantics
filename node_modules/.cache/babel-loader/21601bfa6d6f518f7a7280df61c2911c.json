{"ast":null,"code":"var _jsxFileName = \"/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport React, { Component } from 'react';\nimport { query, Connection } from 'stardog';\nimport { TableDataAvailabilityStatus, columnData, columnSelectors, conn, dbName } from \"../../helpers/constants\";\nconst readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\n\nclass BikeMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 18\n          }\n        });\n      });\n    };\n\n    this.state = {\n      stores: [{\n        latitude: 45.76885136975936,\n        longitude: 4.844764938842583\n      }, {\n        latitude: 45.750954951184056,\n        longitude: 4.83926712071833\n      }, {\n        latitude: 45.75619392865888,\n        longitude: 4.802711079169014\n      }, {\n        latitude: 45.78750975673118,\n        longitude: 4.814421127849675\n      }, {\n        latitude: 45.767534302007626,\n        longitude: 4.873966209868982\n      }, {\n        latitude: 45.784611049886635,\n        longitude: 4.85963914713868\n      }, {\n        latitude: 45.769227436466906,\n        longitude: 4.88046225223826\n      }, {\n        latitude: 45.70598197248764,\n        longitude: 4.900984850609101\n      }, {\n        latitude: 45.77970161324894,\n        longitude: 4.859991160995687\n      }, {\n        latitude: 45.77867061570809,\n        longitude: 4.841013409625181\n      }]\n    };\n  }\n\n  Localisation(lat, lng) {\n    return {\n      latitude: lat,\n      longitude: lng\n    };\n  }\n\n  displayLocalisation() {\n    var result = [];\n    query.execute(conni, 'lyon_bikes', \"select ?lat ?lng where { ?l <http://schema.org/number> ?number . ?l <http://schema.org/lat> ?lat . ?l <http://schema.org/lng> ?lng .}\", 'application/sparql-results+json', {\n      limit: 10,\n      offset: 0\n    }).then(({\n      body\n    }) => {\n      body.results.bindings.map(function (line) {\n        result.push(this.Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)));\n      });\n    });\n    return {\n      loc: result\n    };\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100%'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: mapStyles,\n      initialCenter: {\n        lat: 47.444,\n        lng: -122.176\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, this.displayMarkers()));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBE0oM95iQmrpxaKt7nREeHZwLqSe85nw0'\n})(BikeMap);\nconst conni = new Connection({\n  username: \"admin\",\n  password: \"admin\",\n  endpoint: \"http://localhost:5820\"\n});","map":{"version":3,"sources":["/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js"],"names":["Map","GoogleApiWrapper","Marker","React","Component","query","Connection","TableDataAvailabilityStatus","columnData","columnSelectors","conn","dbName","readQuery","BikeMap","constructor","props","displayMarkers","state","stores","map","store","index","lat","latitude","lng","longitude","console","log","Localisation","displayLocalisation","result","execute","conni","limit","offset","then","body","results","bindings","line","push","parseFloat","value","loc","render","mapStyles","width","height","google","apiKey","username","password","endpoint"],"mappings":"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","sourcesContent":["import { Map, GoogleApiWrapper, Marker} from 'google-maps-react';\nimport React, { Component } from 'react';\nimport {query, Connection} from 'stardog';\nimport {\n    TableDataAvailabilityStatus,\n    columnData,\n    columnSelectors,\n    conn,\n    dbName,\n  } from \"../../helpers/constants\";\n  const readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\n\n\nclass BikeMap extends Component{\n    constructor(props) {\n        super(props);\n    \n        \n        this.state = {\n          stores: [\n            { latitude: 45.76885136975936, longitude: 4.844764938842583 },\n            { latitude: 45.750954951184056, longitude: 4.83926712071833 },\n            { latitude: 45.75619392865888, longitude: 4.802711079169014 },\n            { latitude: 45.78750975673118, longitude: 4.814421127849675 },\n            { latitude: 45.767534302007626, longitude: 4.873966209868982 },\n            { latitude: 45.784611049886635, longitude: 4.85963914713868 },\n            { latitude: 45.769227436466906, longitude: 4.88046225223826 },\n            { latitude: 45.70598197248764, longitude: 4.900984850609101 },\n            { latitude: 45.77970161324894, longitude: 4.859991160995687 },\n            { latitude: 45.77867061570809, longitude: 4.841013409625181 }\n          ]\n        }\n      }\n      \n\n      Localisation(lat, lng) {\n        return {\n          latitude: lat,\n          longitude: lng\n        };\n      }\n      displayLocalisation(){\n        var result = []\n        query.execute(conni, 'lyon_bikes', \"select ?lat ?lng where { ?l <http://schema.org/number> ?number . ?l <http://schema.org/lat> ?lat . ?l <http://schema.org/lng> ?lng .}\", 'application/sparql-results+json', {\n      limit: 10,\n      offset: 0,\n    }).then(({ body }) => {\n        body.results.bindings.map(function(line){result.push(this.Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)))}); \n        \n    })\n        return{\n            loc:result\n        }\n      }\n      displayMarkers = () => {\n        return this.state.stores.map((store, index) => {\n          return <Marker key={index} id={index} position={{\n           lat: store.latitude,\n           lng: store.longitude\n         }}\n         onClick={() => console.log(\"You clicked me!\")} />\n        })\n      }\n    render() {\n        \n        \n        \n        const mapStyles = {\n            width: '100%',\n            height: '100%',\n          };\n        return (\n            <div>\n             \n            <Map\n          google={this.props.google}\n          zoom={8}\n          style={mapStyles}\n          initialCenter={{ lat: 47.444, lng: -122.176}}\n        >\n          {this.displayMarkers()}\n        </Map>\n        </div>\n        );\n      }\n}\n\n\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyBE0oM95iQmrpxaKt7nREeHZwLqSe85nw0'\n  })(BikeMap);\n\n\n  const conni = new Connection({\n    username: \"admin\",\n    password: \"admin\",\n    endpoint: \"http://localhost:5820\"\n  });\n\n"]},"metadata":{},"sourceType":"module"}