{"ast":null,"code":"var _jsxFileName = \"/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport React, { Component } from 'react';\nimport query from 'stardog';\nimport { TableDataAvailabilityStatus, columnData, columnSelectors, conn, dbName } from \"../../helpers/constants\";\nconst readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\n\nclass BikeMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 18\n          }\n        });\n      });\n    };\n\n    this.state = {\n      stores: this.displayLocalisation()\n    };\n  }\n\n  Localisation(lat, lng) {\n    return {\n      latitude: lat,\n      longitude: lng\n    };\n  }\n\n  displayLocalisation() {\n    query.execute(conn, 'lyon_bikes', \"select ?lat ?lng where { ?l <http://schema.org/number> ?number . ?l <http://schema.org/lat> ?lat . ?l <http://schema.org/lng> ?lng .}\", 'application/sparql-results+json', {\n      limit: 10,\n      offset: 0\n    }).then(({\n      body\n    }) => {\n      const resultat = [];\n      body.results.bindings.map(function (line) {\n        resultat.push(this.Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)));\n      });\n      return resultat;\n    });\n    return;\n  }\n\n  refreshData() {\n    query.execute(conn, dbName, readQuery).then(res => {\n      return;\n    });\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100%'\n    };\n    return /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: mapStyles,\n      initialCenter: {\n        lat: 47.444,\n        lng: -122.176\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, this.displayMarkers());\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBE0oM95iQmrpxaKt7nREeHZwLqSe85nw0'\n})(BikeMap);","map":{"version":3,"sources":["/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js"],"names":["Map","GoogleApiWrapper","Marker","React","Component","query","TableDataAvailabilityStatus","columnData","columnSelectors","conn","dbName","readQuery","BikeMap","constructor","props","displayMarkers","state","stores","map","store","index","lat","latitude","lng","longitude","console","log","displayLocalisation","Localisation","execute","limit","offset","then","body","resultat","results","bindings","line","push","parseFloat","value","refreshData","res","render","mapStyles","width","height","google","apiKey"],"mappings":"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","sourcesContent":["import { Map, GoogleApiWrapper, Marker} from 'google-maps-react';\nimport React, { Component } from 'react';\nimport query from 'stardog';\nimport {\n    TableDataAvailabilityStatus,\n    columnData,\n    columnSelectors,\n    conn,\n    dbName,\n  } from \"../../helpers/constants\";\n\nconst readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\n\n\n\n\n\nclass BikeMap extends Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n          stores: this.displayLocalisation()\n          \n        }\n      }\n      Localisation(lat, lng) {\n        return {\n          latitude: lat,\n          longitude: lng\n        };\n      }\n      displayLocalisation (){\n        \n        query.execute(conn, 'lyon_bikes', \"select ?lat ?lng where { ?l <http://schema.org/number> ?number . ?l <http://schema.org/lat> ?lat . ?l <http://schema.org/lng> ?lng .}\", 'application/sparql-results+json', {\n            limit: 10,\n            offset: 0,\n          }).then(({ body }) => {\n            const resultat = []\n            body.results.bindings.map(function(line){resultat.push(this.Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)))}); \n            return(resultat)\n        })\n        return;\n        \n      }\n      refreshData() {\n        query.execute(conn, dbName, readQuery).then(res => {\n            return;\n          })}\n\n      displayMarkers = () => {\n        \n        \n        return this.state.stores.map((store, index) => {\n          return <Marker key={index} id={index} position={{\n           lat: store.latitude,\n           lng: store.longitude\n         }}\n         onClick={() => console.log(\"You clicked me!\")} />\n        })\n      }\n    render() {\n        const mapStyles = {\n            width: '100%',\n            height: '100%',\n          };\n        return (\n            <Map\n              google={this.props.google}\n              zoom={8}\n              style={mapStyles}\n              initialCenter={{ lat: 47.444, lng: -122.176}}\n            >\n              {this.displayMarkers()}\n            </Map>\n        );\n      }\n}\n\n\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyBE0oM95iQmrpxaKt7nREeHZwLqSe85nw0'\n  })(BikeMap);\n\n"]},"metadata":{},"sourceType":"module"}