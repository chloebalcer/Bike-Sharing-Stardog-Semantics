{"ast":null,"code":"var _jsxFileName = \"/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport React, { Component } from 'react';\nimport query from 'stardog';\nimport { TableDataAvailabilityStatus, columnData, columnSelectors, conn, dbName } from \"../../helpers/constants\";\nconst readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\n\nfunction Localisation(lat, lng) {\n  return {\n    latitude: lat,\n    longitude: lng\n  };\n}\n\nconst bd = [];\nquery.execute(conn, 'lyon_bikes', \"select ?lat ?lng where { ?l <http://schema.org/number> ?number . ?l <http://schema.org/lat> ?lat . ?l <http://schema.org/lng> ?lng .}\", 'application/sparql-results+json', {\n  limit: 10,\n  offset: 0\n}).then(({\n  body\n}) => {\n  body.results.bindings.map(function (line) {\n    bd.push(Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)));\n  });\n  return bd;\n});\n\nclass BikeMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 18\n          }\n        });\n      });\n    };\n\n    this.state = {\n      stores: bd\n    };\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100%'\n    };\n    return /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: mapStyles,\n      initialCenter: {\n        lat: 47.444,\n        lng: -122.176\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, this.displayMarkers());\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBE0oM95iQmrpxaKt7nREeHZwLqSe85nw0'\n})(BikeMap);","map":{"version":3,"sources":["/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js"],"names":["Map","GoogleApiWrapper","Marker","React","Component","query","TableDataAvailabilityStatus","columnData","columnSelectors","conn","dbName","readQuery","Localisation","lat","lng","latitude","longitude","bd","execute","limit","offset","then","body","results","bindings","map","line","push","parseFloat","value","BikeMap","constructor","props","displayMarkers","state","stores","store","index","console","log","render","mapStyles","width","height","google","apiKey"],"mappings":";AAAA,SAASA,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,QAA6C,mBAA7C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACIC,2BADJ,EAEIC,UAFJ,EAGIC,eAHJ,EAIIC,IAJJ,EAKIC,MALJ,QAMS,yBANT;AAOE,MAAMC,SAAS,GAAI;;;;;;CAAnB;;AAQF,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5B,SAAO;AACLC,IAAAA,QAAQ,EAAEF,GADL;AAELG,IAAAA,SAAS,EAAEF;AAFN,GAAP;AAID;;AACH,MAAMG,EAAE,GAAG,EAAX;AACAZ,KAAK,CAACa,OAAN,CAAcT,IAAd,EAAoB,YAApB,EAAkC,uIAAlC,EAA2K,iCAA3K,EAA8M;AAC5MU,EAAAA,KAAK,EAAE,EADqM;AAE5MC,EAAAA,MAAM,EAAE;AAFoM,CAA9M,EAGGC,IAHH,CAGQ,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAEpBA,EAAAA,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBC,GAAtB,CAA0B,UAASC,IAAT,EAAc;AAACT,IAAAA,EAAE,CAACU,IAAH,CAAQf,YAAY,CAACgB,UAAU,CAACF,IAAI,CAACb,GAAL,CAASgB,KAAV,CAAX,EAA6BD,UAAU,CAACF,IAAI,CAACZ,GAAL,CAASe,KAAV,CAAvC,CAApB;AAA8E,GAAvH;AACA,SAAOZ,EAAP;AACD,CAPD;;AASA,MAAMa,OAAN,SAAsB1B,SAAtB,CAA+B;AAC3B2B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQjBC,cARiB,GAQA,MAAM;AACrB,aAAO,KAAKC,KAAL,CAAWC,MAAX,CAAkBV,GAAlB,CAAsB,CAACW,KAAD,EAAQC,KAAR,KAAkB;AAC7C,4BAAO,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAoB,UAAA,EAAE,EAAEA,KAAxB;AAA+B,UAAA,QAAQ,EAAE;AAC/CxB,YAAAA,GAAG,EAAEuB,KAAK,CAACrB,QADoC;AAE/CD,YAAAA,GAAG,EAAEsB,KAAK,CAACpB;AAFoC,WAAzC;AAIR,UAAA,OAAO,EAAE,MAAMsB,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,OANM,CAAP;AAOD,KAhBgB;;AAGf,SAAKL,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAElB;AADG,KAAb;AAGD;;AAWHuB,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAG;AACdC,MAAAA,KAAK,EAAE,MADO;AAEdC,MAAAA,MAAM,EAAE;AAFM,KAAlB;AAIA,wBACI,oBAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWY,MADrB;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,KAAK,EAAEH,SAHT;AAIE,MAAA,aAAa,EAAE;AAAE5B,QAAAA,GAAG,EAAE,MAAP;AAAeC,QAAAA,GAAG,EAAE,CAAC;AAArB,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKmB,cAAL,EANH,CADJ;AAUD;;AAjCwB;;AAsC/B,eAAehC,gBAAgB,CAAC;AAC5B4C,EAAAA,MAAM,EAAE;AADoB,CAAD,CAAhB,CAEVf,OAFU,CAAf","sourcesContent":["import { Map, GoogleApiWrapper, Marker} from 'google-maps-react';\nimport React, { Component } from 'react';\nimport query from 'stardog';\nimport {\n    TableDataAvailabilityStatus,\n    columnData,\n    columnSelectors,\n    conn,\n    dbName,\n  } from \"../../helpers/constants\";\n  const readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\n\nfunction Localisation(lat, lng) {\n    return {\n      latitude: lat,\n      longitude: lng\n    };\n  }\nconst bd = []\nquery.execute(conn, 'lyon_bikes', \"select ?lat ?lng where { ?l <http://schema.org/number> ?number . ?l <http://schema.org/lat> ?lat . ?l <http://schema.org/lng> ?lng .}\", 'application/sparql-results+json', {\n  limit: 10,\n  offset: 0,\n}).then(({ body }) => {\n  \n  body.results.bindings.map(function(line){bd.push(Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)))}); \n  return(bd);\n});\n\nclass BikeMap extends Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n          stores: bd\n        }\n      }\n      \n      displayMarkers = () => {\n        return this.state.stores.map((store, index) => {\n          return <Marker key={index} id={index} position={{\n           lat: store.latitude,\n           lng: store.longitude\n         }}\n         onClick={() => console.log(\"You clicked me!\")} />\n        })\n      }\n    render() {\n        const mapStyles = {\n            width: '100%',\n            height: '100%',\n          };\n        return (\n            <Map\n              google={this.props.google}\n              zoom={8}\n              style={mapStyles}\n              initialCenter={{ lat: 47.444, lng: -122.176}}\n            >\n              {this.displayMarkers()}\n            </Map>\n        );\n      }\n}\n\n\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyBE0oM95iQmrpxaKt7nREeHZwLqSe85nw0'\n  })(BikeMap);\n\n"]},"metadata":{},"sourceType":"module"}