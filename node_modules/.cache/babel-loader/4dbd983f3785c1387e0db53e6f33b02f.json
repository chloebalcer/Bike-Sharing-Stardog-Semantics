{"ast":null,"code":"var _jsxFileName = \"/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport React, { Component } from 'react';\nimport { query, Connection } from 'stardog';\nimport { dbName, markers } from \"../../helpers/constants\";\nconst readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\n\nfunction Localisation(lat, lng) {\n  return {\n    latitude: lat,\n    longitude: lng\n  };\n}\n\nconst conni = new Connection({\n  username: \"admin\",\n  password: \"admin\",\n  endpoint: \"http://localhost:5820\"\n});\n\nclass BikeMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.myFunction().map((store, index) => {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 18\n          }\n        });\n      });\n    };\n\n    function ok() {\n      return query.execute(conni, 'lyon_bikes', \"select ?lat ?lng where { ?l <http://schema.org/number> ?number . ?l <http://schema.org/lat> ?lat . ?l <http://schema.org/lng> ?lng .}\", 'application/sparql-results+json', {\n        limit: 10,\n        offset: 0\n      }).then(({\n        body\n      }) => {\n        const stores = [];\n        body.results.bindings.map(function (line) {\n          stores.push(Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)));\n        });\n        return stores;\n      });\n    }\n\n    async function myFunction() {\n      var myVal = await ok();\n      return myVal;\n    }\n\n    this.state = {\n      stores: myFunction()\n    };\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100%'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: mapStyles,\n      initialCenter: {\n        lat: 45,\n        lng: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, this.displayMarkers()));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBE0oM95iQmrpxaKt7nREeHZwLqSe85nw0'\n})(BikeMap);","map":{"version":3,"sources":["/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js"],"names":["Map","GoogleApiWrapper","Marker","React","Component","query","Connection","dbName","markers","readQuery","Localisation","lat","lng","latitude","longitude","conni","username","password","endpoint","BikeMap","constructor","props","displayMarkers","myFunction","map","store","index","console","log","ok","execute","limit","offset","then","body","stores","results","bindings","line","push","parseFloat","value","myVal","state","render","mapStyles","width","height","google","apiKey"],"mappings":"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","sourcesContent":["import { Map, GoogleApiWrapper, Marker} from 'google-maps-react';\nimport React, { Component } from 'react';\nimport {query, Connection} from 'stardog';\nimport {\n    dbName, markers\n  } from \"../../helpers/constants\";\n  const readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\nfunction Localisation(lat, lng) {\n    return {\n      latitude: lat,\n      longitude: lng\n    };\n  }\n\n  const conni = new Connection({\n    username: \"admin\",\n    password: \"admin\",\n    endpoint: \"http://localhost:5820\"\n  }); \n\n\nclass BikeMap extends Component{\n    constructor(props) {\n        super(props);\n        function ok(){\n            return query.execute(conni, 'lyon_bikes', \"select ?lat ?lng where { ?l <http://schema.org/number> ?number . ?l <http://schema.org/lat> ?lat . ?l <http://schema.org/lng> ?lng .}\", 'application/sparql-results+json', {\n              limit: 10,\n              offset: 0,\n            }).then(({ body }) => {\n              const stores = []\n              body.results.bindings.map(function(line){stores.push(Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)))}); \n              return(stores);\n            });\n          }\n    \n          async function myFunction() {\n            var myVal = await ok();\n            return(myVal)\n          }\n        this.state = {\n          stores: myFunction()\n        }\n      }  \n      displayMarkers = () => {\n        return this.myFunction().map((store, index) => {\n          return <Marker key={index} id={index} position={{\n           lat: store.latitude,\n           lng: store.longitude\n         }}\n         onClick={() => console.log(\"You clicked me!\")} />\n        })\n      }\n    render() {     \n        \n        const mapStyles = {\n            width: '100%',\n            height: '100%',\n          };\n        return (\n          <div>\n            <Map\n          google={this.props.google}\n          zoom={8}\n          style={mapStyles}\n          initialCenter={{ lat: 45, lng: 4}}\n        >\n          {this.displayMarkers()}\n        </Map>\n        </div>\n        );\n      }\n}\n\n\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyBE0oM95iQmrpxaKt7nREeHZwLqSe85nw0'\n  })(BikeMap);\n\n"]},"metadata":{},"sourceType":"module"}