{"ast":null,"code":"var _jsxFileName = \"/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport React, { Component } from 'react';\nimport { query, Connection } from 'stardog';\nimport { TableDataAvailabilityStatus, columnData, columnSelectors, conn, dbName } from \"../../helpers/constants\";\nconst readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\n\nfunction Localisation(lat, lng) {\n  return {\n    latitude: lat,\n    longitude: lng\n  };\n}\n\nclass BikeMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 18\n          }\n        });\n      });\n    };\n\n    this.state = {\n      stores: this.displayLocalisation()\n    };\n  }\n\n  displayLocalisation() {\n    query.execute(conni, 'lyon_bikes', \"select ?lat ?lng where { ?l <http://schema.org/number> ?number . ?l <http://schema.org/lat> ?lat . ?l <http://schema.org/lng> ?lng .}\", 'application/sparql-results+json', {\n      limit: 10,\n      offset: 0\n    }).then(({\n      body\n    }) => {\n      const result = [];\n      body.results.bindings.map(function (line) {\n        result.push(Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)));\n      });\n      return result;\n    });\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100%'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: mapStyles,\n      initialCenter: {\n        lat: 45,\n        lng: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, this.displayMarkers()));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBE0oM95iQmrpxaKt7nREeHZwLqSe85nw0'\n})(BikeMap);\nconst conni = new Connection({\n  username: \"admin\",\n  password: \"admin\",\n  endpoint: \"http://localhost:5820\"\n});","map":{"version":3,"sources":["/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js"],"names":["Map","GoogleApiWrapper","Marker","React","Component","query","Connection","TableDataAvailabilityStatus","columnData","columnSelectors","conn","dbName","readQuery","Localisation","lat","lng","latitude","longitude","BikeMap","constructor","props","displayMarkers","state","stores","map","store","index","console","log","displayLocalisation","execute","conni","limit","offset","then","body","result","results","bindings","line","push","parseFloat","value","render","mapStyles","width","height","google","apiKey","username","password","endpoint"],"mappings":"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","sourcesContent":["import { Map, GoogleApiWrapper, Marker} from 'google-maps-react';\nimport React, { Component } from 'react';\nimport {query, Connection} from 'stardog';\nimport {\n    TableDataAvailabilityStatus,\n    columnData,\n    columnSelectors,\n    conn,\n    dbName,\n  } from \"../../helpers/constants\";\n  const readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\nfunction Localisation(lat, lng) {\n    return {\n      latitude: lat,\n      longitude: lng\n    };\n  }\n\nclass BikeMap extends Component{\n    constructor(props) {\n        super(props);\n    \n        \n        this.state = {\n          stores: this.displayLocalisation()\n        }\n      }\n      \n\n      \n      displayLocalisation(){\n        \n        query.execute(conni, 'lyon_bikes', \"select ?lat ?lng where { ?l <http://schema.org/number> ?number . ?l <http://schema.org/lat> ?lat . ?l <http://schema.org/lng> ?lng .}\", 'application/sparql-results+json', {\n      limit: 10,\n      offset: 0,\n    }).then(({ body }) => {\n        const result = []\n        body.results.bindings.map(function(line){result.push(Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)))});       \n        return(result)\n    })\n       \n         \n      }\n      displayMarkers = () => {\n        return this.state.stores.map((store, index) => {\n          return <Marker key={index} id={index} position={{\n           lat: store.latitude,\n           lng: store.longitude\n         }}\n         onClick={() => console.log(\"You clicked me!\")} />\n        })\n      }\n    render() {\n        \n        \n        \n        const mapStyles = {\n            width: '100%',\n            height: '100%',\n          };\n        return (\n            <div>\n             \n            <Map\n          google={this.props.google}\n          zoom={8}\n          style={mapStyles}\n          initialCenter={{ lat: 45, lng: 4}}\n        >\n          {this.displayMarkers()}\n        </Map>\n        </div>\n        );\n      }\n}\n\n\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyBE0oM95iQmrpxaKt7nREeHZwLqSe85nw0'\n  })(BikeMap);\n\n\n  const conni = new Connection({\n    username: \"admin\",\n    password: \"admin\",\n    endpoint: \"http://localhost:5820\"\n  });\n\n"]},"metadata":{},"sourceType":"module"}