{"ast":null,"code":"var _jsxFileName = \"/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js\";\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport React, { Component } from 'react';\nimport { query, Connection } from 'stardog';\nconst readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\n\nfunction Localisation(lat, lng) {\n  return {\n    latitude: lat,\n    longitude: lng\n  };\n}\n\nconst conni = new Connection({\n  username: \"admin\",\n  password: \"admin\",\n  endpoint: \"http://localhost:5820\"\n});\n\nclass BikeMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 18\n          }\n        });\n      });\n    };\n\n    this.state = {\n      stores: []\n    };\n  }\n\n  componentDidMount() {\n    this.displayLocalisation();\n  }\n\n  displayLocalisation() {\n    return query.execute(conni, 'lyon_bikes', \"select ?lat ?lng where {?l <http://schema.org/number> ?number .?l <http://schema.org/lat> ?lat .?l <http://schema.org/lng> ?lng .?l <http://schema.org/status> 'OPEN' .}\", 'application/sparql-results+json').then(({\n      body\n    }) => {\n      const resultat = [];\n      body.results.bindings.map(function (line) {\n        resultat.push(Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)));\n      });\n      this.setState({\n        stores: resultat\n      });\n    });\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100%'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 6,\n      style: mapStyles,\n      initialCenter: {\n        lat: 45.73,\n        lng: 4.82\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, this.displayMarkers()));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'secretcode'\n})(BikeMap);","map":{"version":3,"sources":["/Users/chloebalcer/bikeStation/frontend/src/components/bikes/BikeMap.js"],"names":["Map","GoogleApiWrapper","Marker","InfoWindow","React","Component","query","Connection","readQuery","Localisation","lat","lng","latitude","longitude","conni","username","password","endpoint","BikeMap","constructor","props","displayMarkers","state","stores","map","store","index","console","log","componentDidMount","displayLocalisation","execute","then","body","resultat","results","bindings","line","push","parseFloat","value","setState","render","mapStyles","width","height","google","apiKey"],"mappings":"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","sourcesContent":["import { Map, GoogleApiWrapper, Marker,InfoWindow} from 'google-maps-react';\nimport React, { Component } from 'react';\nimport {query, Connection} from 'stardog';\n\n  const readQuery = `select ?lat ?lng \nwhere {\n    ?l <http://schema.org/number> ?number .\n    ?l <http://schema.org/lat> ?lat .\n    ?l <http://schema.org/lng> ?lng .\n}\n`;\nfunction Localisation(lat, lng) {\n    return {\n      latitude: lat,\n      longitude: lng\n    };\n  }\n\n  const conni = new Connection({\n    username: \"admin\",\n    password: \"admin\",\n    endpoint: \"http://localhost:5820\"\n  }); \n\n\n\n\nclass BikeMap extends Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n          stores: []\n        }\n      }  \n      componentDidMount() {\n        this.displayLocalisation();\n      }\n      displayLocalisation(){\n        return query.execute(conni, 'lyon_bikes', \"select ?lat ?lng where {?l <http://schema.org/number> ?number .?l <http://schema.org/lat> ?lat .?l <http://schema.org/lng> ?lng .?l <http://schema.org/status> 'OPEN' .}\", 'application/sparql-results+json').then(({ body }) => {\n          const resultat = []\n          body.results.bindings.map(function(line){resultat.push(Localisation(parseFloat(line.lat.value), parseFloat(line.lng.value)))}); \n          this.setState({\n              stores: resultat\n          })\n        });\n      }\n      displayMarkers = () => {\n        return this.state.stores.map((store, index) => {\n          return <Marker  key={index} id={index} position={{\n           lat: store.latitude,\n           lng: store.longitude\n          }}\n         onClick={() => console.log(\"You clicked me!\")} ></Marker>\n        })\n      }\n    render() {     \n        const mapStyles = {\n            width: '100%',\n            height: '100%',\n          };\n        return (\n          <div>\n            <Map\n          google={this.props.google}\n          zoom={6}\n          style={mapStyles}\n          initialCenter={{ lat: 45.73, lng: 4.82}}\n        >\n          {this.displayMarkers()}\n        </Map>\n        </div>\n        );\n      }\n}\n\n\n\nexport default GoogleApiWrapper({\n    apiKey: 'secretcode'\n  })(BikeMap);\n\n"]},"metadata":{},"sourceType":"module"}